#+STARTUP:showall

* Contributing

** Running tests

Just run:

#+BEGIN_SRC bash
$ make test
#+END_SRC

*** Git validation

In order to ensure that the git log is as maintainable as possible, the
[[https://github.com/vbatts/git-validation][git-validation]] tool is used. You can install this tool by running:

#+BEGIN_SRC bash
$ go get -u github.com/vbatts/git-validation
#+END_SRC

If you already have this tool installed, then simply perform:

#+BEGIN_SRC bash
$ make git-validation
#+END_SRC

Note that if you don't have this tool installed the task will do nothing (it
will just print a help message). This is done so when running the default make
task this doesn't interrupt it. This task is already called by the default
=test= one.

*** Shellcheck

This project uses [[https://github.com/koalaman/shellcheck][shellcheck]] in order to validate the code style. In order to
run =shellcheck=, just perform:

#+BEGIN_SRC bash
$ make shellcheck
#+END_SRC

** Issue reporting

I'm using [[https://github.com/mssola/writer-mode][Github]] in order to host the code. Thus, in order to report issues you
can do it on its [[https://github.com/mssola/writer-mode/issues][issue tracker]]. A couple of notes on reports:

- Check that the issue has not already been reported or fixed in =master=.
- Try to be concise and precise in your description of the problem.
- Provide a step by step guide on how to reproduce this problem.
- Provide the version you are using (the commit SHA, if possible).

** Pull requests

- Write a [[https://chris.beams.io/posts/git-commit/][good commit message]].
- Make sure that tests are passing on your local machine (it will also be
  checked by the CI system whenever you submit the pull request).
- Update the [[./CHANGELOG.org][changelog]].
- Try to use the same coding conventions as used in this project.
- Open a pull request with *only* one subject and a clear title and
  description. Refrain from submitting pull requests with tons of different
  unrelated commits.
